[T1191 - Execution/Defense Evasion - cmstp]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries may supply CMSTP.exe with INF files infected with malicious commands.2 Similar to Regsvr32 / ”Squiblydoo”, CMSTP.exe may be abused to load and execute DLLs3 and/or COM scriptlets (SCT) from remote servers.45 This execution may also bypass AppLocker and other whitelisting defenses since CMSTP.exe is a legitimate, signed Microsoft application.\
\
https://attack.mitre.org/wiki/Technique/T1191
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","EventCode"]
display.events.type = raw
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new cmstp.exe NewProcessName="C:\\Windows\\System32\\cmstp.exe" \
| rex field=CommandLine "cmstp.exe\s(?<Resource>.*)"\
| eval Resource=lower(Resource)\
| eval Severity=if(match(Resource,"http"),"Critical","Low") \
| eval Category=mvappend("Execution")\
| eval Technique="CMSTP", ID="T1191"\
| table _time HostName UserName CommandLine ParentProcessName Resource Severity Technique Category ID

[T1170 - Execution/Defense Evasion - mshts]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","EventCode"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new CommandLine="mshta*" \
| rex field=CommandLine "mshta\s(?<Resource>.*)"\
| rex field=CommandLine ".*script:(?<Resource>.*)\"" \
| eval Resource=lower(Resource)\
| eval Resource=rtrim(Resource, "\"\"\)") \
| eval Severity=if(match(CommandLine,"http"),"Critical","Medium") \
| eval Category=mvappend("Execution","Defense Evasion") \
| eval Technique="MSHTA",ID="T1170"\
| table _time HostName UserName CommandLine ParentProcessName Resource Severity Technique Category ID

[T1127 - Execution/Defense Evasion - Trusted Developer Utilities (rcsi.exe)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application whitelisting defensive solutions.\
\
https://attack.mitre.org/wiki/Technique/T1127
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new ParentProcessName="C:\\Windows\\System32\\cmd.exe" CommandLine="*" CommandLine="*rcsi.exe *"\
| eval CommandLine=lower(CommandLine)\
| rex field=CommandLine "msbuild.exe\s(?<Resource>.*)" \
| eval Severity=if(match(Resource, "aaaa"), "Critical", "Low") \
| eval Category=mvappend("Execution","Privilege Escalation") \
| eval Technique="Trusted Developer Utilities (MSBuild)", ID="T1127" \
| table _time HostName UserName CommandLine ParentProcessName Resource Severity Technique Category ID

[T1127 - Execution/Defense Evasion - Trusted Developer Utilities (WinDbg)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application whitelisting defensive solutions.\
\
https://attack.mitre.org/wiki/Technique/T1127
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new ParentProcessName="C:\\Windows\\System32\\cmd.exe" CommandLine="*" CommandLine="*WinDbg.exe *"\
| eval CommandLine=lower(CommandLine)\
| rex field=CommandLine "msbuild.exe\s(?<Resource>.*)" \
| eval Severity=if(match(Resource, "aaaa"), "Critical", "Low") \
| eval Category=mvappend("Execution","Privilege Escalation") \
| eval Technique="Trusted Developer Utilities (MSBuild)", ID="T1127" \
| table _time HostName UserName CommandLine ParentProcessName Resource Severity Technique Category ID

[T1127 - Execution/Defense Evasion - Trusted Developer Utilities (Tracker)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application whitelisting defensive solutions.\
\
https://attack.mitre.org/wiki/Technique/T1127
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new ParentProcessName="C:\\Windows\\System32\\cmd.exe" CommandLine="*" CommandLine="*tracker.exe *"\
| eval CommandLine=lower(CommandLine)\
| rex field=CommandLine "msbuild.exe\s(?<Resource>.*)" \
| eval Severity=if(match(Resource, "aaaa"), "Critical", "Low") \
| eval Category=mvappend("Execution","Privilege Escalation") \
| eval Technique="Trusted Developer Utilities (MSBuild)", ID="T1127" \
| table _time HostName UserName CommandLine ParentProcessName Resource Severity Technique Category ID

[T1127 - Execution/Defense Evasion - Trusted Developer Utilities (MSBuild)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application whitelisting defensive solutions.\
\
https://attack.mitre.org/wiki/Technique/T1127
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new ParentProcessName="C:\\Windows\\System32\\cmd.exe" CommandLine="*" CommandLine="*MSBuild.exe *"\
| eval CommandLine=lower(CommandLine)\
| rex field=CommandLine "msbuild.exe\s(?<Resource>.*)" \
| eval Severity=if(match(Resource, "aaaa"), "Critical", "Low") \
| eval Category=mvappend("Execution","Privilege Escalation") \
| eval Technique="Trusted Developer Utilities (MSBuild)", ID="T1127" \
| table _time HostName UserName CommandLine ParentProcessName Resource Severity Technique Category ID

[T1127 - Execution/Defense Evasion - Trusted Developer Utilities (DNX)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application whitelisting defensive solutions.\
\
https://attack.mitre.org/wiki/Technique/T1127
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new ParentProcessName="C:\\Windows\\System32\\cmd.exe" CommandLine="*" CommandLine="*dnx.exe *"\
| eval CommandLine=lower(CommandLine)\
| rex field=CommandLine "msbuild.exe\s(?<Resource>.*)" \
| eval Severity=if(match(Resource, "aaaa"), "Critical", "Low") \
| eval Category=mvappend("Execution","Privilege Escalation") \
| eval Technique="Trusted Developer Utilities (MSBuild)", ID="T1127" \
| table _time HostName UserName CommandLine ParentProcessName Resource Severity Technique Category ID

[T1127 - Execution/Defense Evasion - Trusted Developer Utilities (CDB)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application whitelisting defensive solutions.\
\
https://attack.mitre.org/wiki/Technique/T1127
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new ParentProcessName="C:\\Windows\\System32\\cmd.exe" CommandLine="*" CommandLine="*cdb.exe *"\
| eval CommandLine=lower(CommandLine)\
| rex field=CommandLine "msbuild.exe\s(?<Resource>.*)" \
| eval Severity=if(match(Resource, "aaaa"), "Critical", "Low") \
| eval Category=mvappend("Execution","Privilege Escalation") \
| eval Technique="Trusted Developer Utilities (MSBuild)", ID="T1127" \
| table _time HostName UserName CommandLine ParentProcessName Resource Severity Technique Category ID

[T1121 - Execution/Defense Evasion - Regsvcs/Regasm]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = 0 6 * * 1
description = Adversaries can use Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Both utilities may be used to bypass process whitelisting through use of attributes within the binary to specify code that should be run before registration\
\
https://attack.mitre.org/wiki/Technique/T1121
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (NewProcessName="C:\\Windows\\Microsoft.NET\\Framework*\\RegAsm.exe" OR NewProcessName="C:\\Windows\\Microsoft.NET\\Framework*\\RegSvcs.exe" )\
| rex field=CommandLine ".*\.exe\s(?<Resource>.*).*" \
| eval Resource=lower(Resource) \
| eval Severity=if(match(Resource,"/u"),"Critical","Medium") \
| eval Category=mvappend("Execution","Defense Evasion") \
| eval Technique="Regsvcs/Regasm", ID="T1121" \
| table _time HostName UserName CommandLine ParentProcessName NewProcessName Resource Severity Technique Category ID

[T1118 - Execution/Defense Evasion - InstallUtil]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil may also be used to bypass process whitelisting through use of attributes within the binary\
\
https://attack.mitre.org/wiki/Technique/T1118
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","EventCode"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new NewProcessName="C:\\Windows\\Microsoft.NET\\Framework*\\InstallUtil.exe"\
| rex field=CommandLine ".*\.exe\s(?<Resource>.*).*"\
| eval Resource=lower(Resource)\
| eval Severity=if(match(Resource,"/u"),"Critical","Medium") \
| eval Category=mvappend("Execution","Defense Evasion") \
| eval Technique="InstallUtil", ID="T1118"\
| table _time HostName UserName CommandLine ParentProcessName Resource Severity Technique Category ID

[T1053 - Execution/Persistence/Privilege Escalation - Scheduled Task (Local)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote Execution as part of Lateral Movement, to gain SYSTEM privileges, or to run a process under the context of a specified account.\
\
https://attack.mitre.org/wiki/Technique/T1053
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new ParentProcessName="C:\\Windows\\System32\\cmd.exe" CommandLine="schtasks*"\
| eval CommandLine=lower(CommandLine)\
| rex field=CommandLine "schtasks\s(?<Resource>.*)" \
| eval Remote=if(match(Resource, "/RU"), "Remote", "Local")\
| where Remote="Local"\
| eval Severity=if(Remote="Remote", "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence", "Privilege Escalation") \
| eval Technique="Scheduled Task - Local Schtasks", ID="T1053" \
| table _time HostName UserName CommandLine ParentProcessName Resource Severity Technique Category ID

[T1053 - Execution/Persistence/Privilege Escalation - Scheduled Task (Remote)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote Execution as part of Lateral Movement, to gain SYSTEM privileges, or to run a process under the context of a specified account.\
\
https://attack.mitre.org/wiki/Technique/T1053
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new ParentProcessName="C:\\Windows\\System32\\cmd.exe" CommandLine="schtasks*"\
| eval CommandLine=lower(CommandLine)\
| rex field=CommandLine "schtasks\s(?<Resource>.*)" \
| eval Remote=if(match(Resource, "/ru"), "Remote", "Local")\
| where Remote="Remote"\
| eval Severity=if(Remote="Remote", "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence", "Privilege Escalation") \
| eval Technique="Scheduled Task (Remote)", ID="T1053" \
| table _time HostName UserName CommandLine ParentProcessName Resource Severity Technique Category ID

[T1053 - Execution/Persistence/Privilege Escalation - Scheduled Task (At.exe)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = An adversary may use task scheduling to execute programs at system startup or on a scheduled basis for persistence, to conduct remote Execution as part of Lateral Movement, to gain SYSTEM privileges, or to run a process under the context of a specified account.\
\
https://attack.mitre.org/wiki/Technique/T1053
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new ParentProcessName="C:\\Windows\\System32\\cmd.exe" CommandLine="at*"\
| eval CommandLine=lower(CommandLine)\
| rex field=CommandLine "schtasks\s(?<Resource>.*)" \
| eval Remote=if(match(Resource, "/ru"), "Remote", "Local")\
| eval Severity=if(Remote="Remote", "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation") \
| eval Technique="Scheduled Task (Remote)", ID="T1053" \
| table _time HostName UserName CommandLine ParentProcessName Resource Severity Technique Category ID

[T1117 - Execution/Defense Evasion - Regsvr32]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries may take advantage of regsvr32's functionality to proxy execution of code to avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of whitelists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe is also a Microsoft signed binary.\
\
https://attack.mitre.org/wiki/Technique/T1117
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","EventCode"]
display.events.type = raw
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.format.0 = color
display.statistics.format.0.colorPalette = map
display.statistics.format.0.colorPalette.colors = {"Low":#65A637,"Medium":#ED8440,"Critical":#D93F3C}
display.statistics.format.0.field = Severity
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new NewProcessName="C:\\Windows\\System32\\regsvr32.exe" CommandLine="regsvr32.exe  /s /u /i:* scrobj.dll"\
| rex field=CommandLine "i:(?<Resource>.*)\s"\
| eval Resource=lower(Resource)\
| eval Severity=if(match(CommandLine,"http"),"Critical","Medium") \
| eval Category=mvappend("Execution","Defense Evasion") \
| eval Technique="Regsvr32", ID="T1156"\
| table _time HostName UserName CommandLine ParentProcessName Resource Severity Technique Category ID

[T1086 - Execution - PowerShell (File Download)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information, execution of code or download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\
\
https://attack.mitre.org/wiki/Technique/T1086
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (CommandLine="*\\powershell.exe*" OR CommandLine="powershell*" OR CommandLine="cmd*" OR CommandLine="*\\cmd.exe*") \
| search (\
    CommandLine="*new-object system.net.webclient*" OR\
    CommandLine="*downloadfile('*" OR \
    CommandLine="*downloadstring('*"\
    )\
| rex field=CommandLine ".*shell\.exe(?:\")?\s(?<Command>.*)"\
| rex field=CommandLine ".*powershell (?<Command>.*)"\
| rex field=CommandLine ".*downloadfile\('(?<Resource>.*)',"\
| eval Severity=if(match(CommandLine, "http"), "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation")\
| eval Technique="PowerShell (File Download)", ID="T1086" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID

[T1047 - Execution - Windows Management Instrumentation]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = */1 * * * *
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new CommandLine="wmic *" \
| eval Severity=if(match(CommandLine, "/node") OR match(Commandline, "domain") or match(CommandLine, "user") OR match(CommandLine, "process") OR match(CommandLine, "service") or match(Commandline, "http"), "Critical", "Low") \
| rex field=CommandLine ".*:\"(?<Resource>[^\s]+)\""\
| rex field=CommandLine "wmic\s(?<Command>.*)"\
| eval Category="Execution"\
| eval Technique="Windows Management Instrumentation", ID="T1047" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID

[T1064 - Execution/Defense Evasion - Office spawning scritp]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.suppress = 0
alert.track = 0
cron_schedule = */1 * * * *
description = Scripts can be embedded inside Office documents as macros that can be set to execute when files used in Spearphishing Attachment and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through Exploitation for Client Execution, where adversaries will rely on macos being allowed or that the user will accept to activate them.\
\
https://attack.mitre.org/wiki/Technique/T1064
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (ParentProcessName="*WINWORD.EXE" OR ParentProcessName="*EXCEL.EXE" OR ParentProcessName="*POWERPOINT.EXE") (NewProcessName="*powershell.exe" OR NewProcessName="*cmd.exe" OR NewProcessName="*wscript.exe" OR NewProcessName="*cscritp.exe")\
| rex field=CommandLine "powershell.exe\s(?<Command>.*)"\
| eval Resource=lower(Command)\
| eval Severity=if(match(Command, "http"), "Critical", "Low")\
| eval Category=mvappend("Execution", "Defense Evasion") \
| eval Technique="Office Spawning Scritp", ID="T1064"\
| table _time HostName UserName CommandLine ParentProcessName Command Resource Severity Technique Category ID

[T1086 - Execution - PowerShell (EncodedCommand)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information, execution of code or download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\
\
https://attack.mitre.org/wiki/Technique/T1086
dispatch.earliest_time = -1m@m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (CommandLine="*\\powershell.exe*" OR CommandLine="powershell*" OR CommandLine="cmd*" OR CommandLine="*\\cmd.exe*") \
| eval CommandLine=lower(CommandLine)| search (\
    CommandLine="* -ec *" OR \
    CommandLine="* -enc *" OR \
    CommandLine="* -enco *" OR \
    CommandLine="* -encod *" OR \
    CommandLine="* -encode *" OR \
    CommandLine="* -encoded *" OR \
    CommandLine="* -encodedc *" OR \
    CommandLine="* -encodedco *" OR \
    CommandLine="* -encodedcom *" OR \
    CommandLine="* -encodedcomm *" OR \
    CommandLine="* -encodedcomma *" OR \
    CommandLine="* -encodedcomman *") \
| eval CommandLineClean=replace(CommandLine,"&amp;|'|\^|\+", "")\
| rex field=CommandLineClean ".*shell\.exe(?:\")?\s(?<Command>.*)" \
| rex field=CommandLine ".*-ec\s(?<Resource>\S+)"\
| rex field=CommandLine ".*-enc\s(?<Resource>\S+)" \
| rex field=CommandLine ".*-enco\s(?<Resource>\S+)" \
| rex field=CommandLine ".*-enco\s(?<Resource>\S+)" \
| rex field=CommandLine ".*-encod\s(?<Resource>\S+)" \
| rex field=CommandLine ".*-encode\s(?<Resource>\S+)" \
| rex field=CommandLine ".*-encoded\s(?<Resource>\S+)" \
| rex field=CommandLine ".*-encodedc\s(?<Resource>\S+)" \
| rex field=CommandLine ".*-encodedco\s(?<Resource>\S+)" \
| rex field=CommandLine ".*-encodedcom\s(?<Resource>\S+)" \
| rex field=CommandLine ".*-encodedcomm\s(?<Resource>\S+)" \
| rex field=CommandLine ".*-encodedcomma\s(?<Resource>\S+)" \
| rex field=CommandLine ".*-encodedcomman\s(?<Resource>\S+)" \
| eval Severity=if(match(CommandLine, "http"), "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation")\
| eval Technique="PowerShell (EncodedCommand)", ID="T1086" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID

[T1086 - Execution - PowerShell (Environment Variables)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information, execution of code or download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\
\
https://attack.mitre.org/wiki/Technique/T1086
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (CommandLine="*\\powershell.exe*" OR CommandLine="powershell*" OR CommandLine="cmd*" OR CommandLine="*\\cmd.exe*") \
| search (\
    CommandLine="* $env:tmp *" OR \
    CommandLine="* $env:temp *" OR \
    CommandLine="* $env:windir *" OR \
    CommandLine="* $env:userprofile *" OR \
    CommandLine="* $env:systemroot *" OR \
    CommandLine="* $env:systemdrive *" OR \
    CommandLine="* $env:public *" OR \
    CommandLine="* $env:programw6432 *" OR \
    CommandLine="* $env:programfiles* *" OR \
    CommandLine="* $env:programdata *" OR \
    CommandLine="* $env:localappdata *" OR\
    CommandLine="* $env:appdata *" OR\
    CommandLine="* $env:alluserprofile *" OR\
    CommandLine="* $env:homedrive *") \
| rex field=CommandLine ".*shell\.exe(?:\")?\s(?<Command>.*)" \
| eval Severity=if(match(CommandLine, "http"), "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation")\
| eval Technique="PowerShell (Environment Variables)", ID="T1086" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID

[T1086 - Execution - PowerShell (ExecutionPolicy Bypass)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information, execution of code or download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\
\
https://attack.mitre.org/wiki/Technique/T1086
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (CommandLine="*\\powershell.exe*" OR CommandLine="powershell*" OR CommandLine="cmd*" OR CommandLine="*\\cmd.exe*") \
| search (\
    CommandLine="* “-ep b” *" OR\
    CommandLine="* “-ep by” *" OR\
    CommandLine="* “-ep byp” *" OR\
    CommandLine="* “-ep bypa” *" OR\
    CommandLine="* “-ep bypas” *" OR\
    CommandLine="* “-ep bypass” *" OR\
    CommandLine="* “-exe b” *" OR\
    CommandLine="* “-exe by” *" OR\
    CommandLine="* “-exe byp” *" OR\
    CommandLine="* “-exe bypa” *" OR\
    CommandLine="* “-exe bypas” *" OR\
    CommandLine="* “-exe bypass” *" OR\
    CommandLine="* “-exe b” *" OR\
    CommandLine="* “-exe by” *" OR\
    CommandLine="* “-exe byp” *" OR\
    CommandLine="* “-exe bypa” *" OR\
    CommandLine="* “-exe bypas” *" OR\
    CommandLine="* “-exe bypass” *" OR\
    CommandLine="* “-exe b” *" OR\
    CommandLine="* “-exe by” *" OR\
    CommandLine="* “-exe byp” *" OR\
    CommandLine="* “-exe bypa” *" OR\
    CommandLine="* “-exe bypas” *" OR\
    CommandLine="* “-exe bypass” *" OR\
    CommandLine="* “-exe b” *" OR\
    CommandLine="* “-exe by” *" OR\
    CommandLine="* “-exe byp” *" OR\
    CommandLine="* “-exe bypa” *" OR\
    CommandLine="* “-exe bypas” *" OR\
    CommandLine="* “-exe bypass” *" OR\
    CommandLine="* “-exec b” *" OR\
    CommandLine="* “-exec by” *" OR\
    CommandLine="* “-exec byp” *" OR\
    CommandLine="* “-exec bypa” *" OR\
    CommandLine="* “-exec bypas” *" OR\
    CommandLine="* “-exec bypass” *" OR\
    CommandLine="* “-execu b” *" OR\
    CommandLine="* “-execu by” *" OR\
    CommandLine="* “-execu byp” *" OR\
    CommandLine="* “-execu bypa” *" OR\
    CommandLine="* “-execu bypas” *" OR\
    CommandLine="* “-execu bypass” *" OR\
    CommandLine="* “-execut b” *" OR\
    CommandLine="* “-execut by” *" OR\
    CommandLine="* “-execut byp” *" OR\
    CommandLine="* “-execut bypa” *" OR\
    CommandLine="* “-execut bypas” *" OR\
    CommandLine="* “-execut bypass” *" OR\
    CommandLine="* “-executi b” *" OR\
    CommandLine="* “-executi by” *" OR\
    CommandLine="* “-executi byp” *" OR\
    CommandLine="* “-executi bypa” *" OR\
    CommandLine="* “-executi bypas” *" OR\
    CommandLine="* “-executi bypass” *" OR\
    CommandLine="* “-executio b” *" OR\
    CommandLine="* “-executio by” *" OR\
    CommandLine="* “-executio byp” *" OR\
    CommandLine="* “-executio bypa” *" OR\
    CommandLine="* “-executio bypas” *" OR\
    CommandLine="* “-executio bypass” *" OR\
    CommandLine="* “-executio b” *" OR\
    CommandLine="* “-executio by” *" OR\
    CommandLine="* “-executio byp” *" OR\
    CommandLine="* “-executio bypa” *" OR\
    CommandLine="* “-executio bypas” *" OR\
    CommandLine="* “-executio bypass” *" OR\
    CommandLine="* “-execution b” *" OR\
    CommandLine="* “-execution by” *" OR\
    CommandLine="* “-execution byp” *" OR\
    CommandLine="* “-execution bypa” *" OR\
    CommandLine="* “-execution bypas” *" OR\
    CommandLine="* “-execution bypass” *" OR\
    CommandLine="* “-executionp b” *" OR\
    CommandLine="* “-executionp by” *" OR\
    CommandLine="* “-executionp byp” *" OR\
    CommandLine="* “-executionp bypa” *" OR\
    CommandLine="* “-executionp bypas” *" OR\
    CommandLine="* “-executionp bypass” *" OR\
    CommandLine="* “-executionpo b” *" OR\
    CommandLine="* “-executionpo by” *" OR\
    CommandLine="* “-executionpo byp” *" OR\
    CommandLine="* “-executionpo bypa” *" OR\
    CommandLine="* “-executionpo bypas” *" OR\
    CommandLine="* “-executionpo bypass” *" OR\
    CommandLine="* “-executionpol b” *" OR\
    CommandLine="* “-executionpol by” *" OR\
    CommandLine="* “-executionpol byp” *" OR\
    CommandLine="* “-executionpol bypa” *" OR\
    CommandLine="* “-executionpol bypas” *" OR\
    CommandLine="* “-executionpol bypass” *" OR\
    CommandLine="* “-executionpoli b” *" OR\
    CommandLine="* “-executionpoli by” *" OR\
    CommandLine="* “-executionpoli byp” *" OR\
    CommandLine="* “-executionpoli bypa” *" OR\
    CommandLine="* “-executionpoli bypas” *" OR\
    CommandLine="* “-executionpoli bypass” *" OR\
    CommandLine="* “-executionpolic b” *" OR\
    CommandLine="* “-executionpolic by” *" OR\
    CommandLine="* “-executionpolic byp” *" OR\
    CommandLine="* “-executionpolic bypa” *" OR\
    CommandLine="* “-executionpolic bypas” *" OR\
    CommandLine="* “-executionpolic bypass” *" OR\
    CommandLine="* “-executionpolicy b” *" OR\
    CommandLine="* “-executionpolicy by” *" OR\
    CommandLine="* “-executionpolicy byp” *" OR\
    CommandLine="* “-executionpolicy bypa” *" OR\
    CommandLine="* “-executionpolicy bypas” *") \
| rex field=CommandLine ".*shell\.exe(?:\")?\s(?<Command>.*)" \
| eval Severity=if(match(CommandLine, "http"), "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation")\
| eval Technique="PowerShell (ExecutionPolicy Bypass)", ID="T1086" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID

[T1086 - Execution - PowerShell (No Logo)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information, execution of code or download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\
\
https://attack.mitre.org/wiki/Technique/T1086\
\
-sta is often used by tools used by attackers.
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (CommandLine="*\\powershell.exe*" OR CommandLine="powershell*" OR CommandLine="cmd*" OR CommandLine="*\\cmd.exe*") \
| search (\
    CommandLine="* -nol *" OR\
    CommandLine="* -nol *" OR\
    CommandLine="* -nolo *" OR\
    CommandLine="* -nolog *" OR\
    CommandLine="* -nologo *") \
| rex field=CommandLine ".*shell\.exe(?:\")?\s(?<Command>.*)" \
| eval Severity=if(match(CommandLine, "http"), "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation")\
| eval Technique="PowerShell (No Logo", ID="T1086" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID

[T1086 - Execution - PowerShell (NoExit)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information, execution of code or download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\
\
https://attack.mitre.org/wiki/Technique/T1086\
\
-sta is often used by tools used by attackers.
dispatch.earliest_time = -1m@m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (CommandLine="*\\powershell.exe*" OR CommandLine="powershell*" OR CommandLine="cmd*" OR CommandLine="*\\cmd.exe*") \
| search (\
    CommandLine="* -noe *" OR\
    CommandLine="* -noe *" OR\
    CommandLine="* -noex *" OR\
    CommandLine="* -noexi *" OR\
    CommandLine="* -noexit *") \
| rex field=CommandLine ".*shell\.exe(?:\")?\s(?<Command>.*)" \
| eval Severity=if(match(CommandLine, "http"), "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation")\
| eval Technique="PowerShell (NoExit)", ID="T1086" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID

[T1086 - Execution - PowerShell (NoProfile)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information, execution of code or download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\
\
https://attack.mitre.org/wiki/Technique/T1086
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (CommandLine="*\\powershell.exe*" OR CommandLine="powershell*" OR CommandLine="cmd*" OR CommandLine="*\\cmd.exe*")\
| eval CommandLine=lower(CommandLine) \
| search (\
    CommandLine="* -nop *" OR \
    CommandLine="* -nopr *" OR \
    CommandLine="* -nopro *" OR \
    CommandLine="* -noprof *" OR \
    CommandLine="* -noprofi *" OR \
    CommandLine="* -noprofil *") \
| rex field=CommandLine ".*shell\.exe(?:\")?\s(?<Command>.*)" \
| eval Severity=if(match(CommandLine, "http"), "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation")\
| eval Technique="PowerShell (No Profile)", ID="T1086" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID

[T1086 - Execution - PowerShell (Non Interactive)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information, execution of code or download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\
\
https://attack.mitre.org/wiki/Technique/T1086\
\
-sta is often used by tools used by attackers.
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (CommandLine="*\\powershell.exe*" OR CommandLine="powershell*" OR CommandLine="cmd*" OR CommandLine="*\\cmd.exe*")\
| search (\
    CommandLine="* -no *" OR \
    CommandLine="* -non *" OR \
    CommandLine="* -noni *" OR \
    CommandLine="* -nonin *" OR \
    CommandLine="* -nonint *" OR \
    CommandLine="* -noninte *" OR \
    CommandLine="* -noninter *" OR \
    CommandLine="* -nonintera *" OR \
    CommandLine="* -noninterac *" OR \
    CommandLine="* -noninteract *" OR \
    CommandLine="* -noninteracti *" OR \
    CommandLine="* -noninteractiv *") \
| rex field=CommandLine ".*shell\.exe(?:\")?\s(?<Command>.*)" \
| eval Severity=if(match(CommandLine, "http"), "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation")\
| eval Technique="PowerShell (Non Interactive)", ID="T1086" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID

[T1086 - Execution - PowerShell (Obfuscation +)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information, execution of code or download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\
\
https://attack.mitre.org/wiki/Technique/T1086
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (CommandLine="*\\powershell.exe*" OR CommandLine="powershell*" OR CommandLine="cmd*" OR CommandLine="*\\cmd.exe*") \
| eval List=split(CommandLine, "+")\
| eval Resource = mvcount(List)-1\
| where Resource>=2\
| rex field=CommandLine ".*shell\.exe(?:\")?\s(?<Command>.*)" \
| eval Severity=if(match(CommandLine, "http"), "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation")\
| eval Technique="PowerShell (Obfuscation)", ID="T1086" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID

[T1086 - Execution - PowerShell (Single-Threaded Apartment)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information, execution of code or download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\
\
https://attack.mitre.org/wiki/Technique/T1086\
\
-sta is often used by tools used by attackers.
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (CommandLine="*\\powershell.exe*" OR CommandLine="powershell*" OR CommandLine="cmd*" OR CommandLine="*\\cmd.exe*") \
| search (CommandLine="* -sta *") \
| rex field=CommandLine ".*shell\.exe(?:\")?\s(?<Command>.*)" \
| eval Severity=if(match(CommandLine, "http"), "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation")\
| eval Technique="PowerShell (Single-Threaded Apartment)", ID="T1086" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID

[T1086 - Execution - PowerShell (Suspicious Flag Combination)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information, execution of code or download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\
\
https://attack.mitre.org/wiki/Technique/T1086\
\
-sta is often used by tools used by attackers.
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (CommandLine="*\\powershell.exe*" OR CommandLine="powershell*" OR CommandLine="cmd*" OR CommandLine="*\\cmd.exe*") \
| search (\
    CommandLine="* -window hidden -enc *" OR\
    CommandLine="* -nop -noni -enc *" OR\
    CommandLine="* -mop -sta -noni -w hidden -enc *" OR\
    CommandLine="* -ep bypass -noni -w hidden -enc *" OR\
    CommandLine="* -no -Noni -W hidden -enc *" OR\
    CommandLine="* -nop  -win hidden -noni -enc *" OR \
    CommandLine="* -executionpolicy bypass -windowstyle hidden -enc *" OR \
    CommandLine="* -nop -exec bypass -win Hidden -noni -enc *")\
| rex field=CommandLine ".*shell\.exe(?:\")?\s(?<Command>.*)" \
| eval Severity=if(match(CommandLine, "http"), "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation")\
| eval Technique="PowerShell (Suspicious Flag Combo)", ID="T1086" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID

[T1086 - Execution - PowerShell (Very Long Arguments)]
action.email.useNSSubject = 1
action.summary_index = 1
action.summary_index._name = hunting_windows
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information, execution of code or download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\
\
https://attack.mitre.org/wiki/Technique/T1086
dispatch.earliest_time = -1m@m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (CommandLine="*\\powershell.exe*" OR CommandLine="powershell*" OR CommandLine="cmd*" OR CommandLine="*\\cmd.exe*") \
| rex field=CommandLine ".*shell\.exe(?:\")?\s(?<Command>.*)" \
| eval Resource=len(Command)\
| where Resource>=200\
| eval Severity=if(match(CommandLine, "http"), "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation")\
| eval Technique="PowerShell (Very Long Args)", ID="T1086" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID

[T1086 - Execution - PowerShell (WindowStyle Hiddent)]
action.email.useNSSubject = 1
action.summary_index._name = hunting_windows
alert.track = 0
cron_schedule = */1 * * * *
description = Adversaries can use PowerShell to perform a number of actions, including discovery of information, execution of code or download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\
\
https://attack.mitre.org/wiki/Technique/T1086
dispatch.earliest_time = -1m
dispatch.latest_time = now
display.events.fields = ["EventCode","subject","DestAddress","NewProcessName","CommandLine","ParentProcessName"]
display.events.rowNumbers = 1
display.general.type = statistics
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = hunting_in_windows
request.ui_dispatch_view = search
search = eventtype=hunting_windows_process_new (CommandLine="*\\powershell.exe*" OR CommandLine="powershell*" OR CommandLine="cmd*" OR CommandLine="*\\cmd.exe*") \
| eval CommandLine=lower(CommandLine) \
| search (\
    CommandLine="* -w h *" OR\
    CommandLine="* -w hi *" OR\
    CommandLine="* -w hid *" OR\
    CommandLine="* -w hidd *" OR\
    CommandLine="* -w hidde *" OR\
    CommandLine="* -w hidden *" OR\
    CommandLine="* -w 1*" OR\
    CommandLine="* -wi h *" OR\
    CommandLine="* -wi i *" OR\
    CommandLine="* -wi hid *" OR\
    CommandLine="* -wi hidd *" OR\
    CommandLine="* -wi hidde *" OR\
    CommandLine="* -wi hidden *" OR\
    CommandLine="* -wi 1*" OR\
    CommandLine="* -win h *" OR\
    CommandLine="* -win hi *" OR\
    CommandLine="* -win hid *" OR\
    CommandLine="* -win hidd *" OR\
    CommandLine="* -win hidde *" OR\
    CommandLine="* -win hidden *" OR\
    CommandLine="* -win 1*" OR\
    CommandLine="* -wind h *" OR\
    CommandLine="* -wind hi *" OR\
    CommandLine="* -wind hid *" OR\
    CommandLine="* -wind hidd *" OR\
    CommandLine="* -wind hidde *" OR\
    CommandLine="* -wind hidden *" OR\
    CommandLine="* -wind 1*" OR\
    CommandLine="* -windo h *" OR\
    CommandLine="* -windo hi *" OR\
    CommandLine="* -windo hid *" OR\
    CommandLine="* -windo hidd *" OR\
    CommandLine="* -windo hidde *" OR\
    CommandLine="* -windo hidden *" OR\
    CommandLine="* -windo 1*" OR\
    CommandLine="* -window h *" OR\
    CommandLine="* -window hi *" OR\
    CommandLine="* -window hid *" OR\
    CommandLine="* -window hidd *" OR\
    CommandLine="* -window hidde *" OR\
    CommandLine="* -window hidden *" OR\
    CommandLine="* -window 1*" OR\
    CommandLine="* -windows h *" OR\
    CommandLine="* -windows hi *" OR\
    CommandLine="* -windows hid *" OR\
    CommandLine="* -windows hidd *" OR\
    CommandLine="* -windows hidde *" OR\
    CommandLine="* -windows hidden *" OR\
    CommandLine="* -windows 1*" OR\
    CommandLine="* -windowstyle h *" OR\
    CommandLine="* -windowstyle hi *" OR\
    CommandLine="* -windowstyle hid *" OR\
    CommandLine="* -windowstyle hidd *" OR\
    CommandLine="* -windowstyle hidde *" OR\
    CommandLine="* -windowstyle 1*") \
| rex field=CommandLine ".*shell\.exe(?:\")?\s(?<Command>.*)" \
| eval Severity=if(match(CommandLine, "http"), "Critical", "Low") \
| eval Category=mvappend("Execution","Persistence","Privilege Escalation")\
| eval Technique="PowerShell (WindowStyle Hiddent)", ID="T1086" \
| table _time HostName UserName ParentProcessName CommandLine Command Resource Severity Technique Category ID
